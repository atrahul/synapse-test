{
	"name": "sqlondemandstorage_pipeline",
	"properties": {
		"activities": [
			{
				"name": "Copy Data From Blob To Synapse",
				"description": "This activity copies the data from the blob storage and loads it into the synapse sql pool.",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Create Schema If Not Exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "SqlPoolSink",
						"preCopyScript": {
							"value": "IF OBJECT_ID('[@{pipeline().parameters.SchemaName}].[population]', 'U') IS NOT NULL\n\nBEGIN\n\nDROP TABLE [@{pipeline().parameters.SchemaName}].[population];\n\nEND",
							"type": "Expression"
						},
						"tableOption": "autoCreate"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "sourceBlobDataset",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "sinkSynapseDataset",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": {
								"value": "[@{pipeline().parameters.SchemaName}]",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Create Schema If Not Exists",
				"description": "This activity creates the schema, if not exists. The name of the schema is specified in the pipeline parameter 'SchemaName\".",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:03:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlPoolSource",
						"sqlReaderQuery": {
							"value": "IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = '@{pipeline().parameters.SchemaName}')\nBEGIN\nEXEC('CREATE SCHEMA @{pipeline().parameters.SchemaName}')\nselect Count(*) from sys.symmetric_keys;\nEND\nELSE\nBEGIN\n    select Count(*) from sys.symmetric_keys;\nEND",
							"type": "Expression"
						}
					},
					"dataset": {
						"referenceName": "sqlPoolSchema",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"SchemaName": {
				"type": "string",
				"defaultValue": "dboxyz"
			}
		},
		"annotations": []
	}
}