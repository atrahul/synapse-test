{
	"name": "TripFaresDataPipeline",
	"properties": {
		"activities": [
			{
				"name": "IngestTripDataIntoADLS",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "tripsDataSource",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "tripDataSink",
						"type": "DatasetReference",
						"parameters": {
							"stagingContainer": {
								"value": "@pipeline().parameters.stagingContainer",
								"type": "Expression"
							},
							"datalakeAccountName": {
								"value": "@pipeline().parameters.datalakeAccountName",
								"type": "Expression"
							},
							"keyVaultName": {
								"value": "@pipeline().parameters.KeyVaultName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "IngestTripFaresDataIntoADLS",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "faresDataSource",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "faresDataSink",
						"type": "DatasetReference",
						"parameters": {
							"keyVaultName": {
								"value": "@pipeline().parameters.KeyVaultName",
								"type": "Expression"
							},
							"datalakeAccountName": {
								"value": "@pipeline().parameters.datalakeAccountName",
								"type": "Expression"
							},
							"stagingContainer": {
								"value": "@pipeline().parameters.stagingContainer",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "JoinAndAggregateData",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Create Schema If Does Not Exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "tripFaresDataTransformations",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Create Schema If Does Not Exists",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "IngestTripDataIntoADLS",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "IngestTripFaresDataIntoADLS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "select Count(*) from sys.symmetric_keys;\nBEGIN\nEXEC('CREATE SCHEMA tripfare')\nEND",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "azureSynapseAnalyticsTable",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": {
								"value": "@pipeline().parameters.SchemaName",
								"type": "Expression"
							},
							"SynapseWorkspaceName": {
								"value": "@pipeline().parameters.SynapseWorkspaceName",
								"type": "Expression"
							},
							"SQLDedicatedPoolName": {
								"value": "@pipeline().parameters.SQLDedicatedPoolName",
								"type": "Expression"
							},
							"keyVaultName": {
								"value": "@pipeline().parameters.KeyVaultName",
								"type": "Expression"
							},
							"SQLLoginUsername": {
								"value": "@pipeline().parameters.SQLLoginUsername",
								"type": "Expression"
							}
						}
					}
				}
			}
		],
		"parameters": {
			"SchemaName": {
				"type": "string"
			},
			"SynapseWorkspaceName": {
				"type": "string"
			},
			"SQLDedicatedPoolName": {
				"type": "string"
			},
			"SQLLoginUsername": {
				"type": "string"
			},
			"KeyVaultName": {
				"type": "string"
			},
			"datalakeAccountName": {
				"type": "string"
			},
			"stagingContainer": {
				"type": "string"
			}
		},
		"folder": {
			"name": "TripFaresDataPipeline"
		},
		"annotations": []
	}
}