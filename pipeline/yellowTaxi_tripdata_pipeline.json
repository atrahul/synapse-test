{
	"name": "yellowTaxi_tripdata_pipeline",
	"properties": {
		"activities": [
			{
				"name": "Create Schema If Not Exists",
				"description": "This activity creates the schema, if not exists. The name of the schema is specified in the pipeline parameter 'SchemaName\".",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:03:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderQuery": {
							"value": "IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = '@{pipeline().parameters.SchemaName}')\nBEGIN\nEXEC('CREATE SCHEMA @{pipeline().parameters.SchemaName}')\nselect Count(*) from sys.symmetric_keys;\nEND\nELSE\nBEGIN\n    select Count(*) from sys.symmetric_keys;\nEND",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "createSchemaDataset",
						"type": "DatasetReference",
						"parameters": {
							"SynapseWorkspaceName": {
								"value": "@pipeline().parameters.SynapseWorkspaceName",
								"type": "Expression"
							},
							"SQLDedicatedPoolName": {
								"value": "@pipeline().parameters.SQLDedicatedPoolName",
								"type": "Expression"
							},
							"SQLLoginUsername": {
								"value": "@pipeline().parameters.SQLLoginUsername",
								"type": "Expression"
							},
							"keyVaultName": {
								"value": "@pipeline().parameters.KeyVaultName",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Copy Data From Blob To Synapse",
				"description": "This activity copies data from the public blob and loads that data into synapse sql pool.",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Create Schema If Not Exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "blobToSynapseDataflow",
						"type": "DataFlowReference",
						"datasetParameters": {
							"sourceBlob": {
								"sourceBlobSasUri": {
									"value": "@variables('sourcsBlobSasUri')",
									"type": "Expression"
								}
							},
							"sinkSynapse": {
								"SchemaName": {
									"value": "@pipeline().parameters.SchemaName",
									"type": "Expression"
								},
								"SynapseWorkspaceName": {
									"value": "@pipeline().parameters.SynapseWorkspaceName",
									"type": "Expression"
								},
								"SQLDedicatedPoolName": {
									"value": "@pipeline().parameters.SQLDedicatedPoolName",
									"type": "Expression"
								},
								"SQLLoginUsername": {
									"value": "@pipeline().parameters.SQLLoginUsername",
									"type": "Expression"
								},
								"keyVaultName": {
									"value": "@pipeline().parameters.KeyVaultName",
									"type": "Expression"
								}
							}
						}
					},
					"staging": {
						"linkedService": {
							"referenceName": "polybaseStagingAdlsLinkedservice",
							"type": "LinkedServiceReference",
							"parameters": {
								"keyVaultName": {
									"value": "@pipeline().parameters.KeyVaultName",
									"type": "Expression"
								},
								"datalakeAccountName": {
									"value": "@pipeline().parameters.datalakeAccountName",
									"type": "Expression"
								}
							}
						},
						"folderPath": {
							"value": "@pipeline().parameters.stagingContainer",
							"type": "Expression"
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"SchemaName": {
				"type": "string",
				"defaultValue": "yellowTaxi"
			},
			"SynapseWorkspaceName": {
				"type": "string",
				"defaultValue": "dftxcvpocws1.database.windows.net"
			},
			"SQLDedicatedPoolName": {
				"type": "string",
				"defaultValue": "dftxcvpocws1p1"
			},
			"SQLLoginUsername": {
				"type": "string",
				"defaultValue": "osama"
			},
			"KeyVaultName": {
				"type": "string",
				"defaultValue": "asnmoth"
			},
			"datalakeAccountName": {
				"type": "string",
				"defaultValue": "dlsdftxcvpoc"
			},
			"stagingContainer": {
				"type": "string",
				"defaultValue": "dlsdftxcvpocfs1"
			}
		},
		"variables": {
			"sourcsBlobSasUri": {
				"type": "String",
				"defaultValue": "https://yellowtripdata.blob.core.windows.net/?sv=2020-02-10&ss=bfqt&srt=sco&sp=rwdlacuptfx&se=2061-06-11T03:30:37Z&st=2021-06-10T19:30:37Z&spr=https&sig=BDYHEwS9J%2BTPthsyOcVJwY5gmFcexZI0rx00hnOt%2BCY%3D"
			}
		},
		"annotations": []
	}
}