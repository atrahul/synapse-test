{
	"name": "taxi_yellowtrip_pipeline",
	"properties": {
		"activities": [
			{
				"name": "Create Schema If Not Exists",
				"description": "This activity creates the schema, if not exists. The name of the schema is specified in the pipeline parameter 'SchemaName\".",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:03:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlPoolSource",
						"sqlReaderQuery": {
							"value": "IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = '@{pipeline().parameters.SchemaName}')\nBEGIN\nEXEC('CREATE SCHEMA @{pipeline().parameters.SchemaName}')\nselect Count(*) from sys.symmetric_keys;\nEND\nELSE\nBEGIN\n    select Count(*) from sys.symmetric_keys;\nEND",
							"type": "Expression"
						}
					},
					"dataset": {
						"referenceName": "sqlPoolSchema",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Copy Data From Blob To Synapse",
				"description": "This activity copies data from the public blob and loads that data into synapse sql pool.",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Create Schema If Not Exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "blobToSynapseDataflow",
						"type": "DataFlowReference",
						"datasetParameters": {
							"sinkSynapse": {
								"SchemaName": {
									"value": "@pipeline().parameters.SchemaName",
									"type": "Expression"
								},
								"Synapse Workspace Name": {
									"value": "@pipeline().parameters.Synapse Workspace Name",
									"type": "Expression"
								},
								"SQL Dedicated Pool Name": {
									"value": "@pipeline().parameters.SQL Dedicated Pool Name",
									"type": "Expression"
								},
								"SQL Login Username": {
									"value": "@pipeline().parameters.SQL Login Username",
									"type": "Expression"
								},
								"SQL Login Password": {
									"value": "@pipeline().parameters.SQL Login Password",
									"type": "Expression"
								}
							}
						}
					},
					"staging": {
						"linkedService": {
							"referenceName": "synapsewsmsft-WorkspaceDefaultStorage",
							"type": "LinkedServiceReference"
						},
						"folderPath": "filesystemmsft/polyBaseStage"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"SchemaName": {
				"type": "string",
				"defaultValue": "dbo"
			},
			"SynapseWorkspaceName": {
				"type": "string"
			},
			"SQLDedicatedPoolName": {
				"type": "string"
			},
			"SQLLoginUsername": {
				"type": "string"
			},
			"SQLLoginPassword": {
				"type": "securestring"
			}
		},
		"annotations": []
	}
}